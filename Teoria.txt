1. SINTAXIS Y TIPOS
    Go es un lenguaje estaticamente tipado y compilado, con sintaxis clara y concisa
   
    1.2 VARIABLES
       Declaracion explicita: var edad int = 30
                              var nombre string = "Juan"
       Inferencia de tipo (Go lo deduce): var activo = true // bool
                                          var temp = 36.6 // float64
       Declaracion corta (solo dentro de funciones): mensaje := "Hola mundo"
                                                     contador := 5
    1.3 TIPOS PRIMITIVOS
       Tipo        Descripcion          Ejemplo
       int       Entero            var x int = 42
       float64   Decimal           var pi float64 = 3.14
       string    Texto             var s string = "Hola"
       bool      Booleano          var ok bool = true
       rune      Caracter Unicode  var letra rune = 'a'
       byte      Alias de uint8    var b byte = 255
    
    1.4 CONSTANTES
        const pi = 3.14159
        const saludo string = "Hola"
    
    1.5 ARRAYS Y SLICES
        Array (tama√±o fijo): var numeros [3]int = [3]int{1, 2, 3}
        Slices (lista dinamica): nombres := []string{"Ana", "Luis", "Pedro"}
        Operaciones con slices:
            nombres = append(nombres, "Laura") // agrega Laura a la lista de nombres
            fmt.Println(nombres[1]) // Luis
            fmt.Println(len(nombres)) // largo del slice
    
    1.6 MAPS (dicts/claves y valores)
        edades := map[string]int{
            "Juan": 30,
            "Ana": 25,
        }
        fmt.Println(edades["Juan"]) // 30